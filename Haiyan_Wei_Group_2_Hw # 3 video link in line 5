---Haiyan Wei
-- Prof: Petter Heller 
-- Group # 2
-- I used AI to help understand different method, such as join, count, etc...
-- https://youtu.be/I77uVGJb-sg

USE WideWorldImporters;

SELECT * from WideWorldImporters.INFORMATION_SCHEMA.COLUMNS;

--1ã€€Customer name and order check.
SELECT C.CustomerID, C.CustomerName, O.OrderID, O.OrderDate
FROM Sales.Customers AS C
INNER JOIN Sales.Orders AS O ON C.CustomerID = O.CustomerID;

--2. Full order
SELECT O.OrderID, O.OrderDate, C.CustomerName, P.FullName AS Salesperson
FROM Sales.Orders AS O
INNER JOIN Sales.Customers AS C ON O.CustomerID = C.CustomerID
INNER JOIN Application.People AS P ON O.SalespersonPersonID = P.PersonID;

--3.Order detail
SELECT O.OrderID, OL.StockItemID, SI.StockItemName, OL.Quantity, OL.UnitPrice
FROM Sales.Orders AS O
INNER JOIN Sales.OrderLines AS OL ON O.OrderID = OL.OrderID
INNER JOIN Warehouse.StockItems AS SI ON OL.StockItemID = SI.StockItemID;

--4.Check for customer who do / don't have an order.
SELECT DISTINCT C.CustomerID, C.CustomerName
FROM Sales.Customers AS C
LEFT JOIN Sales.Orders AS O ON C.CustomerID = O.CustomerID
WHERE O.OrderID IS NULL;

SELECT DISTINCT C.CustomerID, C.CustomerName
FROM Sales.Customers AS C
LEFT JOIN Sales.Orders AS O ON C.CustomerID = O.CustomerID
WHERE O.OrderID IS NOT NULL;

--5.Order counts and price.
SELECT C.CustomerID, C.CustomerName, 
       COUNT(O.OrderID) AS TotalOrders,
       SUM(OL.Quantity * OL.UnitPrice) AS TotalAmount
FROM Sales.Customers AS C
LEFT JOIN Sales.Orders AS O ON C.CustomerID = O.CustomerID
LEFT JOIN Sales.OrderLines AS OL ON O.OrderID = OL.OrderID
GROUP BY C.CustomerID, C.CustomerName
order by C.CustomerID;

--6.Check who sale most
SELECT P.PersonID, P.FullName, 
       COUNT(O.OrderID) AS NumberOfOrders,
       SUM(OL.Quantity * OL.UnitPrice) AS TotalSales
FROM Application.People AS P
INNER JOIN Sales.Orders AS O ON P.PersonID = O.SalespersonPersonID
INNER JOIN Sales.OrderLines AS OL ON O.OrderID = OL.OrderID
WHERE P.IsSalesperson = 1
GROUP BY P.PersonID, P.FullName
ORDER BY TotalSales DESC;

--7.Check which item make most money
SELECT SI.StockItemID, SI.StockItemName, SI.Brand,
       SUM(OL.Quantity) AS TotalQuantity,
       SUM(OL.Quantity * OL.UnitPrice) AS TotalRevenue
FROM Warehouse.StockItems AS SI
INNER JOIN Sales.OrderLines AS OL ON SI.StockItemID = OL.StockItemID
GROUP BY SI.StockItemID, SI.StockItemName, SI.Brand
ORDER BY TotalRevenue DESC;

--8.Check order status
SELECT O.OrderID, O.OrderDate, O.ExpectedDeliveryDate,
       CASE 
           WHEN O.PickingCompletedWhen IS NOT NULL THEN 'Completed'
           ELSE 'Pending'
       END AS PickingStatus
FROM Sales.Orders AS O
ORDER BY O.OrderDate DESC;

--9.Menu
SELECT S.SupplierID, S.SupplierName, 
       SI.StockItemID, SI.StockItemName, SI.UnitPrice
FROM Purchasing.Suppliers AS S
INNER JOIN Warehouse.StockItems AS SI ON S.SupplierID = SI.SupplierID
ORDER BY S.SupplierName, SI.StockItemName;

--10.The recent order from customers(With help from AI)
SELECT C.CustomerID, C.CustomerName, 
       O.OrderID, O.OrderDate, O.ExpectedDeliveryDate
FROM Sales.Customers AS C
OUTER APPLY (
    SELECT TOP 1 *
    FROM Sales.Orders AS O
    WHERE O.CustomerID = C.CustomerID
    ORDER BY O.OrderDate DESC
) AS O;
